#if cpp
@cpp(include = "<vector>")
namespace collection;

@cpp(replace = "std::vector<$type>")
public class vector<type>
{
    public function size() int;

    public function resize(size int);

    public function capacity() int;

    public function empty() bool;

    public function reserve(size int);

    @cpp(replace = "shrink_to_fit()")
    public function shrink();

    @cpp(operator = true)
    public function get(position int) type;

    @cpp(operator = true)
    public function set(position int, value type) type;

    public function front() type;

    public function back() type;

    @cpp(replace = "assign($size, $value)")
    public function fill(size int, value type);
    
    @cpp(replace = "push_back()")
    public function push(value type);

    @cpp(replace = "$this->back();$this->pop_back()")
    public function pop() type;

    @cpp(replace = "$this->insert($this->begin() + $position, $value))")
    public function insert(position int, value type);

    public function erase(position int);

    public function clear();
}
#end